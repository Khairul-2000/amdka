// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum UserRole {
  SUPERADMIN
  ADMIN
}


model User {
  id    String @id @default(cuid())
  email String @unique
  name  String
  phone String?
  password String
  otpCode     String? 
  otpExpires DateTime?
  isVerified Boolean @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  wishlists Wishlist[]
}

model admin {
  id    String @id @default(cuid())
  email String @unique
  name  String
  phone String?
  password String
  role    UserRole @default(ADMIN)
}

model Product {
  id            String   @id @default(cuid())
  sl_no         Int      @unique
  product_name  String
  description   String
  images        String[]
  sizes         String[]
  colors        String[]
  price         Int
  offer_price   Int
  affiate_link  String
  agent_name    String
  category      String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  wishlists     Wishlist[]
}


model Wishlist {
  id        String   @id @default(cuid())
  userId    String
  productId String
  user      User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, productId])
}
